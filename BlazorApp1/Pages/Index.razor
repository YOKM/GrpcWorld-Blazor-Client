@page "/"
@using BlazorApp1.Data
@inject StudentService StudentService
@using GrpcService.Protos;
@using Grpc.Net.Client;



<h1>gRPC c# Blazor!</h1>


<h1>grpc Connection</h1>

<input type="text" @bind="@Name" />
<button class="btn btn-primary" @onclick="@SendName">Send Name</button>
<label>@Greetings</label>


<br>
<button class="btn btn-primary" @onclick="@AddNewStd">New</button>
<br><label>@InsertReply</label>









@code {

    
    GrpcChannel channel = GrpcChannel.ForAddress("https://localhost:5001");

    //  string Name = "Your Name";w

    int Name = 11;

    string Greetings = null;
    string InsertReply = null;


    async Task SendName()
    {
        //  this.Greetings = await this.StudentService.GetStudentByID(this.Name);
        //  this.Greetings = await this.ImagingJobService.GetJobByID(this.Name);

        var ScheduleJobClient = new RemoteImagingScheduleJob.RemoteImagingScheduleJobClient(channel);
        var scheduleJobClient_Detail = new RemoteImagingScheduleJob_Detail.RemoteImagingScheduleJob_DetailClient(channel);

        var ScheduleJobInput = new ImagingScheduleJobLookupModel { Id = this.Name };
        var ScheduleJobInput_Detail = new ImagingScheduleJobLookupModel_Detail { Jobid = this.Name};

        var ScheduleJobReply = await ScheduleJobClient.GetImagingScheduleJobInfoAsync(ScheduleJobInput);
        var ScheduleJobReply_Detail = await scheduleJobClient_Detail.GetImagingScheduleJobInfo_DetailAsync(ScheduleJobInput_Detail);

        this.Greetings = ScheduleJobReply.Jobname +"  : " + ScheduleJobReply_Detail.EmailNotificationAddress;

    }

    async Task AddNewStd()
    {
               
        StudentModel aNewStudent = new StudentModel()
        {

            FirstName = "ABCVX",
            LastName = "BNNB",
            School = "RICOH",
        };

        InsertReply = await this.StudentService.AddNewStd(aNewStudent);

    }



   



}

